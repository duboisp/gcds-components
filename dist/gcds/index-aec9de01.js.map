{"file":"index-aec9de01.js","mappings":"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","names":[],"sources":["src/validators/validator.ts","src/validators/input-validators/input-validators.ts","src/validators/checkbox-validators/checkbox-validators.ts","src/validators/fieldset-validators/fieldset-validators.ts","src/validators/validator.factory.ts"],"sourcesContent":["export interface Validator<A> {\n  validate: (x: A) => any;\n  errorMessage?: object;\n}\n\nexport interface ValidatorEntry {\n  name: string;\n  options?: any;\n}\n\nexport interface GcdsErrorInterface {\n  id: string;\n  message: string;\n}\n\nexport const defaultValidator: Validator<any> = {\n  validate: (_x: any) => true,\n};\n\nexport function combineValidators<A>(\n  v1: Validator<A>,\n  v2: Validator<A>,\n): Validator<A> {\n  let combined: Validator<A>;\n\n  combined = {\n    validate: (x: A) => {\n      const res1: boolean = v1.validate(x);\n      const res2: boolean = v2.validate(x);\n\n      if (!res1) {\n        combined.errorMessage = v1.errorMessage;\n      } else if (!res2) {\n        combined.errorMessage = v2.errorMessage;\n      }\n\n      return res1 && res2;\n    },\n  };\n  return combined;\n}\n\nexport function requiredValidator(element, type, subtype?) {\n  if (element.required) {\n    switch (type) {\n      // Components all validate the \"value\" property\n      case 'input':\n        switch (subtype) {\n          case 'email':\n            if (element.validator) {\n              element.validator.unshift('requiredEmailField');\n            } else {\n              element.validator = ['requiredEmailField'];\n            }\n            break;\n          default:\n            if (element.validator) {\n              element.validator.unshift('requiredField');\n            } else {\n              element.validator = ['requiredField'];\n            }\n            break;\n        }\n        break;\n      case 'select':\n        if (element.validator) {\n          element.validator.unshift('requiredSelectField');\n        } else {\n          element.validator = ['requiredSelectField'];\n        }\n        break;\n      case 'textarea':\n        if (element.validator) {\n          element.validator.unshift('requiredField');\n        } else {\n          element.validator = ['requiredField'];\n        }\n        break;\n      case 'file':\n        if (element.validator) {\n          element.validator.unshift('requiredFileInput');\n        } else {\n          element.validator = ['requiredFileInput'];\n        }\n        break;\n      case 'checkbox':\n        if (element.validator) {\n          element.validator.unshift('requiredCheck');\n        } else {\n          element.validator = ['requiredCheck'];\n        }\n        break;\n      case 'fieldset':\n        if (element.validator) {\n          element.validator.unshift('requiredFieldset');\n        } else {\n          element.validator = ['requiredFieldset'];\n        }\n        break;\n      case 'date-input':\n        if (element.validator) {\n          element.validator.unshift('requiredDateInput');\n        } else {\n          element.validator = ['requiredDateInput'];\n        }\n        break;\n    }\n  }\n}\n\n/*\nExample of parameter validator\n\nexport function getLengthValidator(min: number, max: number): Validator<string> {\n    // Create errorMessage object\n    let errorMessage = {};\n    if (min && max) {\n        errorMessage[\"en\"] = `You must enter between ${min} and ${max} characters`;\n        errorMessage[\"fr\"] = `French You must enter between ${min} and ${max} characters`;\n    } else if (min) {\n        errorMessage[\"en\"] = `You must enter at least ${min} characters`;\n        errorMessage[\"fr\"] = `French You must enter at least ${min} characters`;\n    } else if (max) {\n        errorMessage[\"en\"] = `You must enter less than ${max} characters`;\n        errorMessage[\"fr\"] = `French You must enter less than ${max} characters`;\n    }\n    return {\n        validate: (value: string) => {\n            value = value || '';\n            if (min && max) {\n                return min <= value.length && value.length <= max;\n            }\n            if (min) {\n                return min <= value.length;\n            }\n            if (max) {\n                return value.length <= max;\n            }\n            return true;\n        },\n        errorMessage\n    };\n}\n*/\n","import { Validator } from '../validator';\nimport { isValidDate } from '../../utils/utils';\n\nconst emailPattern =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const requiredField: Validator<string> = {\n  validate: (value: string) => value != null && value.trim() != '',\n  errorMessage: {\n    en: 'Enter information to continue.',\n    fr: 'Saisissez des renseignements pour continuer.',\n  },\n};\n\nexport const requiredEmailField: Validator<string> = {\n  validate: (value: string) =>\n    value != null &&\n    value.trim() != '' &&\n    (value.toLowerCase().match(emailPattern) ? true : false),\n  errorMessage: {\n    en: 'Enter a valid email address to continue. Use a standard format. Example: name@address.ca.',\n    fr: 'Saisissez votre adresse courriel pour continuer. Utilisez un format standard. Exemple: nom@adresse.ca.',\n  },\n};\n\nexport const requiredFileInput: Validator<FileList> = {\n  validate: (value: FileList) => value.length > 0,\n  errorMessage: {\n    en: 'You must upload a file to continue.',\n    fr: 'Vous devez téléverser un fichier pour continuer.',\n  },\n};\n\nexport const requiredSelectField: Validator<string> = {\n  validate: (value: string) => value != null && value.trim() != '',\n  errorMessage: {\n    en: 'Choose an option to continue.',\n    fr: 'Choisissez une option pour continuer.',\n  },\n};\n\n/*\n * Date input validators\n */\nexport const dateInputErrorMessage = {\n  en: {\n    all: 'Enter the date.',\n    missingmonth: 'Select the month.',\n    missingyear: 'Enter the year.',\n    missingday: 'Enter the day.',\n    missingmonthday: 'Select the month and enter the day.',\n    missingmonthyear: 'Select the month and enter the year.',\n    missingdayyear: 'Enter the day and year.',\n    invalidyearlength: 'Year must be 4 digits.',\n    invalidyear: 'Enter a valid year.',\n    invalidday: 'Enter a valid day.',\n  },\n  fr: {\n    all: 'Saisissez la date.',\n    missingmonth: 'Sélectionnez un mois.',\n    missingyear: \"Saisissez l'année.\",\n    missingday: 'Saisissez le jour.',\n    missingmonthday: 'Saisissez le jour et sélectionnez un mois.',\n    missingmonthyear: \"Sélectionnez un mois et saisissez l'année.\",\n    missingdayyear: \"Saisissez le jour et l'année.\",\n    invalidyearlength: \"L'année doit inclure 4 chiffres.\",\n    invalidyear: 'Entrez une année valide.',\n    invalidday: 'Saisissez un jour valide.',\n  },\n};\n\nexport const requiredDateInput: Validator<string> = {\n  validate: (date: string) => {\n    if (isValidDate(date)) {\n      return { valid: true };\n    }\n\n    let splitDate = date.split('-');\n    let dateObject = {\n      day: splitDate[2],\n      month: splitDate[1],\n      year: splitDate[0],\n    };\n\n    let format = splitDate.length === 3 ? 'full' : 'compact';\n\n    const error = getDateInputError(dateObject, format);\n\n    return error;\n  },\n  errorMessage: dateInputErrorMessage,\n};\n\nconst getDateInputError = (dateValues, format) => {\n  const { day, month, year } = dateValues;\n\n  let errorResponse = {\n    valid: false,\n    errors: {\n      day: false,\n      month: false,\n      year: false,\n    },\n    reason: {\n      en: '',\n      fr: '',\n    },\n  };\n\n  // No values set\n  if (!day && !month && !year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.month = true;\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.all;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.all;\n\n    // No day set\n  } else if (!day && month && year) {\n    errorResponse.errors.day = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingday;\n\n    // No month set\n  } else if (\n    (day && !month && year) ||\n    (!day && !month && year && format === 'compact')\n  ) {\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonth;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonth;\n\n    // No year set\n  } else if (\n    (day && month && !year) ||\n    (!day && month && !year && format === 'compact')\n  ) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingyear;\n\n    // No day and month set\n  } else if (!day && !month && year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonthday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonthday;\n\n    // No day and year set\n  } else if (!day && month && !year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingdayyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingdayyear;\n\n    // No month and year set\n  } else if (day && !month && !year) {\n    errorResponse.errors.year = true;\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonthyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonthyear;\n\n    // Year is formatted incorrectly\n  } else if (year.length != 4) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidyearlength;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidyearlength;\n\n    // Year format\n  } else if (year < 0 || year > 9999) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidyear;\n\n    // Invalid day\n  } else {\n    errorResponse.errors.day = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidday;\n  }\n\n  return errorResponse;\n};\n","import { Validator } from '../validator';\n\nexport const requiredCheck: Validator<boolean> = {\n  validate: (value: boolean) => value,\n  errorMessage: {\n    en: 'You must check the box to continue.',\n    fr: 'Vous devez cocher la case pour continuer.',\n  },\n};\n","import { Validator } from '../validator';\n\nexport const requiredFieldset: Validator<string> = {\n  validate: (id: string) => {\n    const el = document.querySelector(`[fieldset-id=${id}]`);\n    const elChildren = el.children;\n\n    const isValid = validateFieldsetElements(el, elChildren);\n\n    return !isValid.includes(false);\n  },\n  errorMessage: {\n    en: 'Choose an option to continue.',\n    fr: 'Choisissez une option pour continuer.',\n  },\n};\n\nexport function validateFieldsetElements(element, nodeList) {\n  let isValid = [];\n\n  for (let i = 0; i < nodeList.length; i++) {\n    switch (nodeList[i].nodeName) {\n      case 'GCDS-FIELDSET': {\n        const validFieldsetChildren = validateFieldsetElements(\n          nodeList[i],\n          nodeList[i].children,\n        );\n        isValid = isValid.concat(validFieldsetChildren);\n        break;\n      }\n\n      case 'GCDS-CHECKBOX': {\n        // Checkboxes can share name property\n        const inputName = nodeList[i].getAttribute('name');\n        // Find all inputs with shared name\n        const sameNameInputs = element.querySelectorAll(`[name=${inputName}]`);\n        let childGroupValid = false;\n\n        // Check if there is more than one input with this name\n        if (sameNameInputs.length > 1) {\n          // Validate as group\n          for (let c = 0; c < sameNameInputs.length; c++) {\n            if (sameNameInputs[c].hasAttribute('checked')) {\n              childGroupValid = true;\n            }\n          }\n          isValid.push(childGroupValid);\n        } else {\n          // Validate as single input\n          isValid.push(nodeList[i].hasAttribute('checked') ? true : false);\n        }\n        break;\n      }\n      case 'GCDS-RADIO-GROUP': {\n        const inputName = nodeList[i].getAttribute('name');\n        // Find all inputs with shared name\n        const sameNameInputs = element.querySelector(`[name=${inputName}]`);\n        const shadowInputs =\n          sameNameInputs.shadowRoot.querySelectorAll('input');\n        let childGroupValid = false;\n\n        for (let r = 0; r < shadowInputs.length; r++) {\n          if (shadowInputs[r].checked) {\n            childGroupValid = true;\n          }\n        }\n        isValid.push(childGroupValid);\n        break;\n      }\n\n      case 'GCDS-INPUT':\n      case 'GCDS-TEXTAREA':\n      case 'GCDS-SELECT':\n      case 'GCDS-FILE-UPLOADER':\n        // Do nothing for now\n        break;\n    }\n  }\n\n  return isValid;\n}\n","import {\n  Validator,\n  ValidatorEntry,\n  defaultValidator,\n  combineValidators,\n} from './validator';\nimport {\n  requiredField,\n  requiredEmailField,\n  requiredFileInput,\n  requiredSelectField,\n  requiredDateInput,\n} from './input-validators/input-validators';\nimport { requiredCheck } from './checkbox-validators/checkbox-validators';\nimport { requiredFieldset } from './fieldset-validators/fieldset-validators';\n\nexport enum ValidatorsName {\n  requiredField = 'requiredField',\n  requiredEmailField = 'requiredEmailField',\n  requiredCheck = 'requiredCheck',\n  requiredFieldset = 'requiredFieldset',\n  requiredFileInput = 'requiredFileInput',\n  requiredSelectField = 'requiredSelectField',\n  requiredDateInput = 'requiredDateInput',\n}\n\nexport function getValidator<A>(\n  list: Array<string | ValidatorEntry | Validator<A>>,\n): Validator<A> {\n  return (list || [])\n    .map(v => {\n      if (typeof v === 'string') {\n        return validatorFactory(v, null);\n      } else if (v && (v as any).name) {\n        v = v as ValidatorEntry;\n        return validatorFactory(v.name, v.options);\n      } else {\n        return v as Validator<A>;\n      }\n    })\n    .reduce(combineValidators, defaultValidator);\n}\n\nexport function validatorFactory(name: string, options: any): Validator<any> {\n  options ? options : {};\n  switch (name) {\n    case ValidatorsName.requiredField:\n      return requiredField;\n    case ValidatorsName.requiredEmailField:\n      return requiredEmailField;\n    case ValidatorsName.requiredSelectField:\n      return requiredSelectField;\n    case ValidatorsName.requiredCheck:\n      return requiredCheck;\n    case ValidatorsName.requiredFieldset:\n      return requiredFieldset;\n    case ValidatorsName.requiredDateInput:\n      return requiredDateInput;\n    case ValidatorsName.requiredFileInput:\n      return requiredFileInput;\n    default:\n      return defaultValidator;\n  }\n}\n"],"version":3}