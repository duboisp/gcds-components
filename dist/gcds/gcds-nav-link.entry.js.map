{"file":"gcds-nav-link.entry.esm.js","mappings":";;;AAAA,MAAM,cAAc,GAAG,4gGAA4gG;;MCkBthG,WAAW;;;;;;;;;;;;;;IA4CtB,MAAM,SAAS;QACb,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KAC1B;;;;IAKD,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS;YAC7C,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;KAC3C;IAED,MAAM,iBAAiB;;QAErB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YACnC,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,IAAI,cAAc,EAAE;gBACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;aAC5B;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;SAC3B;KACF;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE/B,MAAM,SAAS,GAAG,EAAE,CAAC;QAErB,IAAI,OAAO,EAAE;YACX,SAAS,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;SACpC;QAED,QACE,EAAC,IAAI,IAAC,IAAI,EAAC,UAAU,IACnB,uBACE,KAAK,EAAE,gCAAgC,IAAI,CAAC,QAAQ,EAAE,EACtD,IAAI,EAAE,IAAI,IACN,SAAS,IACb,MAAM,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAClC,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EACpC,OAAO,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAChD,GAAG,EAAE,OAAO,KAAK,IAAI,CAAC,WAAW,GAAG,OAAsB,CAAC,KAE3D,eAAa,CACX,CACC,EACP;KACH;;;;;;;","names":[],"sources":["src/components/gcds-nav-link/gcds-nav-link.css?tag=gcds-nav-link&encapsulation=shadow","src/components/gcds-nav-link/gcds-nav-link.tsx"],"sourcesContent":["@layer reset, default, variants, hover, active, focus;@layer reset{:host .gcds-nav-link{box-sizing:border-box}:host .gcds-nav-link slot{display:initial}}@layer default{:host .gcds-nav-link{border-inline:var(--gcds-nav-link-border-width) solid transparent;color:var(--gcds-nav-link-default-text);display:flex;font:var(---gcds-nav-link-font);margin-block-end:var(--gcds-nav-link-margin);padding:var(--gcds-nav-link-padding);text-decoration-color:currentColor;text-decoration-line:underline;text-decoration-style:solid;text-decoration-thickness:var(--gcds-nav-link-default-decoration-thickness);text-underline-offset:var(--gcds-nav-link-default-underline-offset);transition:all .25s ease-in-out}@media only screen and (width < 64em){:host .gcds-nav-link{min-width:50%}}@media only screen and (width > 48em){:host .gcds-nav-link{max-width:var(--gcds-nav-link-default-max-width)}}:host .gcds-nav-link[aria-current=page]{pointer-events:none;text-decoration:none}}@layer variants{@media only screen and (width >= 64em){:host>.gcds-nav-link--topnav.gcds-nav-link{border-block-end:var(--gcds-nav-link-border-width) solid transparent;border-inline:0;color:var(--gcds-nav-link-top-nav-text);margin:var(--gcds-nav-link-top-nav-margin);padding:var(--gcds-nav-link-top-nav-padding)}:host>.gcds-nav-link--topnav.gcds-nav-link:not(:hover){text-decoration-color:transparent}:host([slot=home])>.gcds-nav-link{font:var(--gcds-nav-link-top-nav-home-font);padding:var(--gcds-nav-link-top-nav-home-padding)}}:host>.gcds-nav-link--sidenav.gcds-nav-link{padding:var(--gcds-nav-link-side-nav-padding)}}@layer hover{@media (hover:hover){:host .gcds-nav-link:hover{color:var(--gcds-nav-link-hover-text);text-decoration-thickness:var(\n        --gcds-nav-link-hover-decoration-thickness\n      )}:host>.gcds-nav-link--dropdown.gcds-nav-link:hover,:host>.gcds-nav-link--sidenav.gcds-nav-link:hover{color:var(--gcds-nav-link-hover-text)}:host>.gcds-nav-link--sidenav.gcds-nav-link:hover{background-color:var(--gcds-nav-link-side-nav-hover-background)}:host>.gcds-nav-link--dropdown.gcds-nav-link:hover{background-color:var(--gcds-nav-link-top-nav-hover-background)}}}@layer active{:host .gcds-nav-link[aria-current=page]{background-color:var(--gcds-nav-link-active-background);border-inline-start-color:var(--gcds-nav-link-active-border-color);color:var(--gcds-nav-link-active-text);font-weight:var(--gcds-nav-link-active-font-weight)}@media only screen and (width >= 64em){:host>.gcds-nav-link--topnav.gcds-nav-link[aria-current=page]{background-color:transparent;border-block-end-color:var(--gcds-nav-link-active-border-color);color:var(--gcds-nav-link-top-nav-text);font:var(--gcds-nav-link-font)}}}@layer focus{:host .gcds-nav-link:focus{background-color:var(--gcds-nav-link-focus-background);border-color:var(--gcds-nav-link-focus-background);border-radius:var(--gcds-nav-link-focus-border-radius);box-shadow:var(--gcds-nav-link-focus-box-shadow);color:var(--gcds-nav-link-focus-text);outline:var(--gcds-nav-link-focus-outline);outline-offset:var(--gcds-nav-link-focus-outline-offset);text-decoration:none}}","import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  Method,\n  Event,\n  EventEmitter,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig, emitEvent } from '../../utils/utils';\n\n@Component({\n  tag: 'gcds-nav-link',\n  styleUrl: 'gcds-nav-link.css',\n  shadow: true,\n})\nexport class GcdsNavLink {\n  @Element() el: HTMLElement;\n\n  private linkElement: HTMLElement;\n\n  /**\n   * Link href\n   */\n  @Prop({ reflect: true }) href!: string;\n\n  /**\n   * Current page flag\n   */\n  @Prop({ reflect: true }) current: boolean;\n\n  /**\n   * Emitted when the link has been clicked.\n   */\n  @Event() gcdsClick!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Style of nav to render based on parent\n   */\n  @State() navStyle: string;\n\n  /**\n   * Focus the link element\n   */\n  @Method()\n  async focusLink() {\n    this.linkElement.focus();\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    if (this.el.closest('gcds-top-nav')) {\n      if (this.el.parentNode.nodeName == 'GCDS-TOP-NAV') {\n        this.navStyle = 'topnav';\n      } else {\n        this.navStyle = 'dropdown';\n      }\n    } else {\n      this.navStyle = 'sidenav';\n    }\n  }\n\n  render() {\n    const { current, href } = this;\n\n    const linkAttrs = {};\n\n    if (current) {\n      linkAttrs['aria-current'] = 'page';\n    }\n\n    return (\n      <Host role=\"listitem\">\n        <a\n          class={`gcds-nav-link gcds-nav-link--${this.navStyle}`}\n          href={href}\n          {...linkAttrs}\n          onBlur={() => this.gcdsBlur.emit()}\n          onFocus={() => this.gcdsFocus.emit()}\n          onClick={e => emitEvent(e, this.gcdsClick, href)}\n          ref={element => (this.linkElement = element as HTMLElement)}\n        >\n          <slot></slot>\n        </a>\n      </Host>\n    );\n  }\n}\n"],"version":3}