{"file":"gcds-text.entry.esm.js","mappings":"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","names":[],"sources":["src/components/gcds-text/gcds-text.css?tag=gcds-text&encapsulation=shadow","src/components/gcds-text/gcds-text.tsx"],"sourcesContent":["@layer reset, default, display, limit, margin, role, size, style, weight;@layer reset{:host{color:var(--gcds-text-role-primary);display:block}:host .gcds-text{box-sizing:border-box;display:inherit;margin:0}:host .gcds-text slot{display:initial}}@layer default{:host .gcds-text{font:var(--gcds-text-size-body-desktop)}@media only screen and (width < 48em){:host .gcds-text{font:var(--gcds-text-size-body-mobile)}}}@layer display{:host.d-block{display:block}:host.d-flex{display:flex}:host.d-inline{display:inline}:host.d-inline-block{display:inline-block}:host.d-inline-flex{display:inline-flex}:host.d-none{display:none}}@layer limit{:host .gcds-text.limit{max-width:var(--gcds-text-character-limit)}}@layer margin{:host .gcds-text.mt-0{margin-block-start:var(--gcds-text-spacing-0)}:host .gcds-text.mt-50{margin-block-start:var(--gcds-text-spacing-50)}:host .gcds-text.mt-100{margin-block-start:var(--gcds-text-spacing-100)}:host .gcds-text.mt-150{margin-block-start:var(--gcds-text-spacing-150)}:host .gcds-text.mt-200{margin-block-start:var(--gcds-text-spacing-200)}:host .gcds-text.mt-250{margin-block-start:var(--gcds-text-spacing-250)}:host .gcds-text.mt-300{margin-block-start:var(--gcds-text-spacing-300)}:host .gcds-text.mt-400{margin-block-start:var(--gcds-text-spacing-400)}:host .gcds-text.mt-450{margin-block-start:var(--gcds-text-spacing-450)}:host .gcds-text.mt-500{margin-block-start:var(--gcds-text-spacing-500)}:host .gcds-text.mt-550{margin-block-start:var(--gcds-text-spacing-550)}:host .gcds-text.mt-600{margin-block-start:var(--gcds-text-spacing-600)}:host .gcds-text.mt-700{margin-block-start:var(--gcds-text-spacing-700)}:host .gcds-text.mt-800{margin-block-start:var(--gcds-text-spacing-800)}:host .gcds-text.mt-900{margin-block-start:var(--gcds-text-spacing-900)}:host .gcds-text.mt-1000{margin-block-start:var(--gcds-text-spacing-1000)}:host .gcds-text.mb-0{margin-block-end:var(--gcds-text-spacing-0)}:host .gcds-text.mb-50{margin-block-end:var(--gcds-text-spacing-50)}:host .gcds-text.mb-100{margin-block-end:var(--gcds-text-spacing-100)}:host .gcds-text.mb-150{margin-block-end:var(--gcds-text-spacing-150)}:host .gcds-text.mb-200{margin-block-end:var(--gcds-text-spacing-200)}:host .gcds-text.mb-250{margin-block-end:var(--gcds-text-spacing-250)}:host .gcds-text.mb-300{margin-block-end:var(--gcds-text-spacing-300)}:host .gcds-text.mb-400{margin-block-end:var(--gcds-text-spacing-400)}:host .gcds-text.mb-450{margin-block-end:var(--gcds-text-spacing-450)}:host .gcds-text.mb-500{margin-block-end:var(--gcds-text-spacing-500)}:host .gcds-text.mb-550{margin-block-end:var(--gcds-text-spacing-550)}:host .gcds-text.mb-600{margin-block-end:var(--gcds-text-spacing-600)}:host .gcds-text.mb-700{margin-block-end:var(--gcds-text-spacing-700)}:host .gcds-text.mb-800{margin-block-end:var(--gcds-text-spacing-800)}:host .gcds-text.mb-900{margin-block-end:var(--gcds-text-spacing-900)}:host .gcds-text.mb-1000{margin-block-end:var(--gcds-text-spacing-1000)}}@layer variants.role{:host .gcds-text.role-primary{color:var(--gcds-text-role-primary)}:host .gcds-text.role-secondary{color:var(--gcds-text-role-secondary)}:host .gcds-text.role-light{color:var(--gcds-text-role-light)}}@layer variants.size{:host .gcds-text :is(small,::slotted(small)){font:var(--gcds-text-size-caption-desktop)}@media only screen and (width < 48em){:host .gcds-text :is(small,::slotted(small)){font:var(--gcds-text-size-caption-mobile)}}}@layer variants.style{:host .gcds-text ::slotted(em){font-style:italic}}@layer variants.weight{:host .gcds-text ::slotted(strong){font-weight:var(--gcds-text-weight-bold)}}","import { Component, Element, Host, Watch, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'gcds-text',\n  styleUrl: 'gcds-text.css',\n  shadow: true,\n})\nexport class GcdsText {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Sets the main style of the text.\n   */\n  @Prop({ mutable: true }) textRole?: 'light' | 'primary' | 'secondary' =\n    'primary';\n\n  @Watch('textRole')\n  validateTextRole(newValue: string) {\n    const values = ['light', 'primary', 'secondary'];\n\n    if (!values.includes(newValue)) {\n      this.textRole = 'primary';\n    }\n  }\n\n  /**\n   * Sets the line length to a maximum amount of characters per line to ensure a comfortable, accessible reading length.\n   */\n  @Prop() characterLimit?: boolean = true;\n\n  /**\n   * Specifies the display behaviour of the text.\n   */\n  @Prop({ mutable: true }) display?:\n    | 'block'\n    | 'flex'\n    | 'inline'\n    | 'inline-block'\n    | 'inline-flex'\n    | 'none' = 'block';\n\n  @Watch('display')\n  validateDisplay(newValue: string) {\n    const values = [\n      'block',\n      'flex',\n      'inline',\n      'inline-block',\n      'inline-flex',\n      'none',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.display = 'block';\n    }\n  }\n\n  /**\n   * Adds margin above the text.\n   */\n  @Prop({ mutable: true }) marginTop?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000' = '0';\n\n  @Watch('marginTop')\n  validateMarginTop(newValue: string) {\n    const values = [\n      '0',\n      '50',\n      '100',\n      '150',\n      '200',\n      '250',\n      '300',\n      '400',\n      '450',\n      '500',\n      '550',\n      '600',\n      '700',\n      '800',\n      '900',\n      '1000',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.marginTop = '0';\n    }\n  }\n\n  /**\n   * Adds margin below the text.\n   */\n  @Prop({ mutable: true }) marginBottom?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000' = '400';\n\n  @Watch('marginBottom')\n  validateMarginBottom(newValue: string) {\n    const values = [\n      '0',\n      '50',\n      '100',\n      '150',\n      '200',\n      '250',\n      '300',\n      '400',\n      '450',\n      '500',\n      '550',\n      '600',\n      '700',\n      '800',\n      '900',\n      '1000',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.marginBottom = '400';\n    }\n  }\n\n  /**\n   * Sets the appropriate HTML tags for the selected size.\n   */\n  @Prop({ mutable: true }) size?: 'body' | 'caption' = 'body';\n\n  @Watch('size')\n  validateSize(newValue: string) {\n    const values = ['body', 'caption'];\n\n    if (!values.includes(newValue)) {\n      this.size = 'body';\n    }\n  }\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateTextRole(this.textRole);\n    this.validateDisplay(this.display);\n    this.validateMarginTop(this.marginTop);\n    this.validateMarginBottom(this.marginBottom);\n    this.validateSize(this.size);\n  }\n\n  render() {\n    const { characterLimit, display, marginTop, marginBottom, size, textRole } =\n      this;\n\n    return (\n      <Host class={`${display != 'block' ? `d-${display}` : ''}`}>\n        <p\n          class={`\n            gcds-text\n            ${textRole ? `role-${textRole}` : ''}\n            ${characterLimit ? 'limit' : ''}\n            ${marginTop ? `mt-${marginTop}` : ''}\n            ${marginBottom ? `mb-${marginBottom}` : ''}\n          `}\n          part=\"text\"\n        >\n          {size === 'caption' ? (\n            <small>\n              <slot />\n            </small>\n          ) : (\n            <slot />\n          )}\n        </p>\n      </Host>\n    );\n  }\n}\n"],"version":3}