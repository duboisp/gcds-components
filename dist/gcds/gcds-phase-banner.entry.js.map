{"file":"gcds-phase-banner.entry.esm.js","mappings":";;;AAAA,MAAM,IAAI,GAAG;AACb,EAAE,EAAE,EAAE;AACN,IAAI,KAAK,EAAE,QAAQ;AACnB,GAAG;AACH,EAAE,EAAE,EAAE;AACN,IAAI,KAAK,EAAE,UAAU;AACrB,GAAG;AACH,CAAC;;ACPD,MAAM,kBAAkB,GAAG,onEAAonE;;MCSloE,eAAe;;;0BAUqB,SAAS;yBAKQ,IAAI;;;;;;;;;;IAmBpE,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS;YAC7C,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;KAC3C;IAED,MAAM,iBAAiB;;QAErB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,MAAM;QACJ,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEtD,QACE,EAAC,IAAI,QACH,WACE,KAAK,EAAE,kCAAkC,UAAU,IACjD,OAAO,GAAG,kBAAkB,GAAG,EACjC,EAAE,EACF,IAAI,EAAC,QAAQ,gBACDA,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAE5B,sBAAgB,IAAI,EAAE,SAAS,EAAE,QAAQ,UACvC,WAAK,KAAK,EAAC,iBAAiB,IAC1B,cAAQ,KAAK,EAAC,yBAAyB,IACrC,YAAM,IAAI,EAAC,kBAAkB,GAAG,CACzB,EAET,WAAK,KAAK,EAAC,iBAAiB,IAC1B,YAAM,IAAI,EAAC,aAAa,GAAG,EAC3B,YAAM,IAAI,EAAC,YAAY,GAAG,CACtB,EAEN,cAAQ,KAAK,EAAC,0BAA0B,IACtC,YAAM,IAAI,EAAC,mBAAmB,GAAG,CAC1B,CACL,CACS,CACb,CACD,EACP;KACH;;;;;;;","names":["i18n"],"sources":["src/components/gcds-phase-banner/i18n/i18n.js","src/components/gcds-phase-banner/gcds-phase-banner.css?tag=gcds-phase-banner&encapsulation=shadow","src/components/gcds-phase-banner/gcds-phase-banner.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    label: 'Banner',\n  },\n  fr: {\n    label: 'BanniÃ¨re',\n  },\n};\n\nexport default I18N;\n","@layer reset, default, fixed, role, wide, compact;@layer reset{:host{display:block}:host slot{display:initial}}@layer default{:host .gcds-phase-banner{container:component banner/inline-size;font:var(--gcds-phase-banner-font);line-height:var(--gcds-phase-banner-line-height)}:host .gcds-phase-banner .banner__content{padding:var(--gcds-phase-banner-padding)}:host .gcds-phase-banner .banner__icon{display:flex;margin:0}:host .gcds-phase-banner .banner__icon.icon--left{margin-inline-end:var(--gcds-phase-banner-icon-margin)}:host .gcds-phase-banner .banner__icon.icon--right{margin-inline-start:var(--gcds-phase-banner-icon-margin)}:host .gcds-phase-banner .banner__icon ::slotted(img),:host .gcds-phase-banner .banner__icon ::slotted(svg){max-height:var(--gcds-phase-banner-icon-max-height)}:host .gcds-phase-banner .banner__details{align-items:baseline;display:flex;flex-wrap:wrap}:host .gcds-phase-banner .banner__details ::slotted(a),:host .gcds-phase-banner .banner__details ::slotted(gcds-button){flex:0 0 auto}:host .gcds-phase-banner .banner__details ::slotted(a),:host .gcds-phase-banner .banner__details ::slotted(small),:host .gcds-phase-banner .banner__details ::slotted(span){font-size:80%!important}:host .gcds-phase-banner .banner__details ::slotted(p){font:var(--gcds-phase-banner-font);margin:0}:host .gcds-phase-banner .banner__details ::slotted(a){color:inherit}:host .gcds-phase-banner .banner__details ::slotted(gcds-button){margin:var(--gcds-phase-banner-details-cta-margin);transform:scale(90%)}}@layer fixed{:host .gcds-phase-banner.banner-is-fixed{position:sticky;top:0;width:100%;z-index:9999}}@layer role{:host .gcds-phase-banner.banner--role-primary{background-color:var(--gcds-phase-banner-primary-background);color:var(--gcds-phase-banner-primary-text)}:host .gcds-phase-banner.banner--role-secondary{background-color:var(--gcds-phase-banner-secondary-background);color:var(--gcds-phase-banner-secondary-text)}}@layer wide{@container banner (width >= 36em){:host .gcds-phase-banner .banner__content{display:flex}}}@layer compact{@container banner (width < 36em){:host .gcds-phase-banner .banner__content .banner__icon{display:none}}}","import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-phase-banner',\n  styleUrl: 'gcds-phase-banner.css',\n  shadow: true,\n})\nexport class GcdsPhaseBanner {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines banner role.\n   */\n  @Prop() bannerRole?: 'primary' | 'secondary' = 'primary';\n\n  /**\n   * Defines the container width of the phase banner content\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' = 'xl';\n\n  /**\n   * Defines if the banner's position is fixed.\n   */\n  @Prop() isFixed?: boolean;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { bannerRole, container, isFixed, lang } = this;\n\n    return (\n      <Host>\n        <div\n          class={`gcds-phase-banner banner--role-${bannerRole} ${\n            isFixed ? 'banner--is-fixed' : ''\n          }`}\n          role=\"status\"\n          aria-label={i18n[lang].label}\n        >\n          <gcds-container size={container} centered>\n            <div class=\"banner__content\">\n              <figure class=\"banner__icon icon--left\">\n                <slot name=\"banner-icon-left\" />\n              </figure>\n\n              <div class=\"banner__details\">\n                <slot name=\"banner-text\" />\n                <slot name=\"banner-cta\" />\n              </div>\n\n              <figure class=\"banner__icon icon--right\">\n                <slot name=\"banner-icon-right\" />\n              </figure>\n            </div>\n          </gcds-container>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}