{"file":"gcds-grid.entry.esm.js","mappings":";;AAAA,MAAM,WAAW,GAAG,svGAAsvG;;MCgB7vG,QAAQ;;;;;;;wBAuBU,KAAK;uBAKS,MAAM;8BAMd,KAAK;mBAc7B,KAAK;;;;;;;;IAGhB,WAAW,CAAC,QAAgB;QAC1B,MAAM,MAAM,GAAG;YACb,SAAS;YACT,OAAO;YACP,KAAK;YACL,IAAI;YACJ,MAAM;YACN,KAAK;YACL,IAAI;YACJ,SAAS;YACT,IAAI;SACL,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC9B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;KACF;IAkCD,iBAAiB;;QAEf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,MAAM;QACJ,MAAM,EACJ,YAAY,EACZ,UAAU,EACV,OAAO,EACP,cAAc,EACd,aAAa,EACb,SAAS,EACT,QAAQ,EACR,OAAO,EACP,cAAc,EACd,cAAc,EACd,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,GAAG,GACJ,GAAG,IAAI,CAAC;QAET,MAAM,GAAG,GAAG,GAAG,CAAC;QAChB,MAAM,UAAU,GAAG;;QAEf,YAAY,GAAG,iBAAiB,YAAY,EAAE,GAAG,EAAE;QACnD,UAAU,GAAG,eAAe,UAAU,EAAE,GAAG,EAAE;QAE7C,CAAC,OAAO,IAAI,aAAa,IAAI,cAAc,MAAM,SAAS;cACtD,wBAAwB;cACxB,WAAW,OAAO,EACxB;QACE,cAAc,GAAG,kBAAkB,GAAG,EAAE;QACxC,cAAc,GAAG,mBAAmB,cAAc,EAAE,GAAG,EAAE;QACzD,YAAY,GAAG,iBAAiB,YAAY,EAAE,GAAG,EAAE;QACnD,YAAY,GAAG,iBAAiB,YAAY,EAAE,GAAG,EAAE;QACnD,UAAU,GAAG,eAAe,UAAU,EAAE,GAAG,EAAE;KAChD,CAAC;;QAGF,SAAS,aAAa;YACpB,MAAM,iBAAiB,GAAG,EAAE,CAAC;YAE7B,IAAI,OAAO,EAAE;gBACX,iBAAiB,CAAC,qBAAqB,CAAC,GAAG,OAAO,CAAC;aACpD;YAED,IAAI,aAAa,EAAE;gBACjB,iBAAiB,CAAC,4BAA4B,CAAC,GAAG,aAAa,CAAC;aACjE;YAED,IAAI,cAAc,EAAE;gBAClB,iBAAiB,CAAC,6BAA6B,CAAC,GAAG,cAAc,CAAC;aACnE;YAED,OAAO,iBAAiB,CAAC;SAC1B;QAED,QACE,EAAC,IAAI,QACF,SAAS,IACR,sBAAgB,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,IACjD,EAAC,GAAG,IAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,aAAa,EAAE,IAC5C,eAAQ,CACJ,CACS,KAEjB,EAAC,GAAG,IAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,aAAa,EAAE,IAC5C,eAAQ,CACJ,CACP,CACI,EACP;KACH;;;;;;;;;;","names":[],"sources":["src/components/gcds-grid/gcds-grid.css?tag=gcds-grid&encapsulation=shadow","src/components/gcds-grid/gcds-grid.tsx"],"sourcesContent":["@layer reset, default, display, align, justify, place, equalHeight, tablet, desktop;@layer reset{:host{display:block}:host .gcds-grid{box-sizing:border-box;margin:0;padding:0}}@layer default{:host .gcds-grid{gap:var(--gcds-grid-gap);grid-template-columns:var(--gcds-grid-columns,1fr)}}@layer display{:host .gcds-grid.display-grid-with-cols{display:grid;grid-template-columns:1fr}:host .gcds-grid.display-grid{display:grid}:host .gcds-grid.display-inline-grid{display:inline-grid}}@layer align{:host .gcds-grid.align-content-center{align-content:center}:host .gcds-grid.align-content-end{align-content:end}:host .gcds-grid.align-content-space-around{align-content:space-around}:host .gcds-grid.align-content-space-between{align-content:space-between}:host .gcds-grid.align-content-space-evenly{align-content:space-evenly}:host .gcds-grid.align-content-start{align-content:start}:host .gcds-grid.align-content-stretch{align-content:stretch}:host .gcds-grid.align-items-baseline{align-items:baseline}:host .gcds-grid.align-items-center{align-items:center}:host .gcds-grid.align-items-end{align-items:end}:host .gcds-grid.align-items-start{align-items:start}:host .gcds-grid.align-items-stretch{align-items:stretch}}@layer justify{:host .gcds-grid.justify-content-center{justify-content:center}:host .gcds-grid.justify-content-end{justify-content:end}:host .gcds-grid.justify-content-space-around{justify-content:space-around}:host .gcds-grid.justify-content-space-between{justify-content:space-between}:host .gcds-grid.justify-content-space-evenly{justify-content:space-evenly}:host .gcds-grid.justify-content-start{justify-content:start}:host .gcds-grid.justify-content-stretch{justify-content:stretch}:host .gcds-grid.justify-items-center{justify-items:center}:host .gcds-grid.justify-items-end{justify-items:end}:host .gcds-grid.justify-items-start{justify-items:start}:host .gcds-grid.justify-items-stretch{justify-items:stretch}}@layer place{:host .gcds-grid.place-content-center{place-content:center}:host .gcds-grid.place-content-end{place-content:end}:host .gcds-grid.place-content-space-around{place-content:space-around}:host .gcds-grid.place-content-space-between{place-content:space-between}:host .gcds-grid.place-content-space-evenly{place-content:space-evenly}:host .gcds-grid.place-content-start{place-content:start}:host .gcds-grid.place-content-stretch{place-content:stretch}:host .gcds-grid.place-items-center{place-items:center}:host .gcds-grid.place-items-end{place-items:end}:host .gcds-grid.place-items-start{place-items:start}:host .gcds-grid.place-items-stretch{place-items:stretch}}@layer equalHeight{:host .gcds-grid.equal-row-height{align-items:stretch;grid-auto-rows:1fr}}@layer tablet{@media screen and (width >= 48em){:host .gcds-grid{grid-template-columns:var(\n        --gcds-grid-columns-tablet,var(--gcds-grid-columns,1fr)\n      )}:host .gcds-grid.display-grid-with-cols{grid-template-columns:repeat(var(--gcds-grid-columns-default-tablet),minmax(0,1fr))}}}@layer desktop{@media screen and (width >= 64em){:host .gcds-grid{grid-template-columns:var(\n        --gcds-grid-columns-desktop,var(--gcds-grid-columns-tablet,var(--gcds-grid-columns,1fr))\n      )}:host .gcds-grid.display-grid-with-cols{grid-template-columns:repeat(var(--gcds-grid-columns-default-desktop),minmax(0,1fr))}}}","import { Component, Element, Host, Watch, Prop, h } from '@stencil/core';\n\nexport type ContentValues =\n  | 'center'\n  | 'end'\n  | 'space-around'\n  | 'space-between'\n  | 'space-evenly'\n  | 'start'\n  | 'stretch';\n\n@Component({\n  tag: 'gcds-grid',\n  styleUrl: 'gcds-grid.css',\n  shadow: true,\n})\nexport class GcdsGrid {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines the columns of the grid\n   * Option to set different layouts for desktop | tablet | default (includes mobile)\n   */\n  @Prop() columns?: string;\n  @Prop() columnsTablet?: string;\n  @Prop() columnsDesktop?: string;\n\n  /**\n   * Defines grid container size\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\n\n  /**\n   * Defines if grid container is centered or not\n   */\n  @Prop() centered?: boolean = false;\n\n  /**\n   * Defines element as grid or inline-grid container\n   */\n  @Prop() display?: 'grid' | 'inline-grid' = 'grid';\n\n  /**\n   * Sets all grid items to have an equal height,\n   * based on the tallest item.\n   */\n  @Prop() equalRowHeight?: boolean = false;\n\n  /**\n   * Set tag for grid container\n   */\n  @Prop({ mutable: true }) tag?:\n    | 'article'\n    | 'aside'\n    | 'div'\n    | 'dl'\n    | 'main'\n    | 'nav'\n    | 'ol'\n    | 'section'\n    | 'ul' = 'div';\n\n  @Watch('tag')\n  validateTag(newValue: string) {\n    const values = [\n      'article',\n      'aside',\n      'div',\n      'dl',\n      'main',\n      'nav',\n      'ol',\n      'section',\n      'ul',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.tag = 'div';\n    }\n  }\n\n  /**\n   * If total grid size is less than the size of its grid container,\n   * this property aligns the grid along the block (column) axis\n   */\n  @Prop() alignContent?: ContentValues;\n\n  /**\n   * If total grid size is less than the size of its grid container,\n   * this property aligns the grid along the inline (row) axis\n   */\n  @Prop() justifyContent?: ContentValues;\n\n  /**\n   * Sets both the align-content + justify-content properties\n   */\n  @Prop() placeContent?: ContentValues;\n\n  /**\n   * Aligns grid items along the block (column) axis\n   */\n  @Prop() alignItems?: 'baseline' | 'center' | 'end' | 'start' | 'stretch';\n\n  /**\n   * Aligns grid items along the inline (row) axis\n   */\n  @Prop() justifyItems?: 'center' | 'end' | 'start' | 'stretch';\n\n  /**\n   * Sets both the align-items + justify-items properties\n   */\n  @Prop() placeItems?: 'center' | 'end' | 'start' | 'stretch';\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateTag(this.tag);\n  }\n\n  render() {\n    const {\n      alignContent,\n      alignItems,\n      columns,\n      columnsDesktop,\n      columnsTablet,\n      container,\n      centered,\n      display,\n      equalRowHeight,\n      justifyContent,\n      justifyItems,\n      placeContent,\n      placeItems,\n      tag,\n    } = this;\n\n    const Tag = tag;\n    const classNames = `\n      gcds-grid\n      ${alignContent ? `align-content-${alignContent}` : ''}\n      ${alignItems ? `align-items-${alignItems}` : ''}\n      ${\n        (columns || columnsTablet || columnsDesktop) === undefined\n          ? `display-grid-with-cols`\n          : `display-${display}`\n      }\n      ${equalRowHeight ? 'equal-row-height' : ''}\n      ${justifyContent ? `justify-content-${justifyContent}` : ''}\n      ${justifyItems ? `justify-items-${justifyItems}` : ''}\n      ${placeContent ? `place-content-${placeContent}` : ''}\n      ${placeItems ? `place-items-${placeItems}` : ''}\n    `;\n\n    // Set CSS variables in style attribute based on passed column properties\n    function handleColumns() {\n      const responsiveColumns = {};\n\n      if (columns) {\n        responsiveColumns['--gcds-grid-columns'] = columns;\n      }\n\n      if (columnsTablet) {\n        responsiveColumns['--gcds-grid-columns-tablet'] = columnsTablet;\n      }\n\n      if (columnsDesktop) {\n        responsiveColumns['--gcds-grid-columns-desktop'] = columnsDesktop;\n      }\n\n      return responsiveColumns;\n    }\n\n    return (\n      <Host>\n        {container ? (\n          <gcds-container size={container} centered={centered}>\n            <Tag class={classNames} style={handleColumns()}>\n              <slot />\n            </Tag>\n          </gcds-container>\n        ) : (\n          <Tag class={classNames} style={handleColumns()}>\n            <slot />\n          </Tag>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}