{"file":"gcds-icon.entry.esm.js","mappings":";;AAAA,MAAM,WAAW,GAAG,o87GAAo87G;;MCO387G,QAAQ;;;yBAUuB,OAAO;;;;;0BAyDnB,KAAK;oBAcxB,MAAM;;IAEjB,MAAM;QACJ,MAAM,EACJ,SAAS,EACT,KAAK,EACL,UAAU,EACV,WAAW,EACX,IAAI,EACJ,UAAU,EACV,IAAI,GACL,GAAG,IAAI,CAAC;QAET,QACE,EAAC,IAAI,QACH,YACE,KAAK,EAAE;8BACa,SAAS,OAAO,IAAI;cACpC,UAAU,GAAG,MAAM,UAAU,EAAE,GAAG,EAAE;cACpC,WAAW,GAAG,MAAM,WAAW,EAAE,GAAG,EAAE;cACtC,IAAI,GAAG,QAAQ,IAAI,EAAE,GAAG,EAAE;cAC1B,UAAU,GAAG,aAAa,GAAG,EAAE;WAClC,EACD,IAAI,EAAC,KAAK,gBACE,KAAK,GAAG,KAAK,GAAG,KAAK,iBACpB,KAAK,GAAG,OAAO,GAAG,MAAM,GAC/B,CACH,EACP;KACH;;;;;;;","names":[],"sources":["src/components/gcds-icon/gcds-icon.scss?tag=gcds-icon&encapsulation=shadow","src/components/gcds-icon/gcds-icon.tsx"],"sourcesContent":["@use '../../../../../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\n:host .gcds-icon {\n  font-family: var(--gcds-icon-font-family);\n  font-size: inherit;\n  line-height: inherit;\n  color: inherit;\n\n  /* Margin left */\n  &.ml-0 {\n    margin-inline-start: var(--gcds-icon-margin-0);\n  }\n\n  &.ml-50 {\n    margin-inline-start: var(--gcds-icon-margin-50);\n  }\n\n  &.ml-100 {\n    margin-inline-start: var(--gcds-icon-margin-100);\n  }\n\n  &.ml-150 {\n    margin-inline-start: var(--gcds-icon-margin-150);\n  }\n\n  &.ml-200 {\n    margin-inline-start: var(--gcds-icon-margin-200);\n  }\n\n  &.ml-250 {\n    margin-inline-start: var(--gcds-icon-margin-250);\n  }\n\n  &.ml-300 {\n    margin-inline-start: var(--gcds-icon-margin-300);\n  }\n\n  &.ml-400 {\n    margin-inline-start: var(--gcds-icon-margin-400);\n  }\n\n  &.ml-450 {\n    margin-inline-start: var(--gcds-icon-margin-450);\n  }\n\n  &.ml-500 {\n    margin-inline-start: var(--gcds-icon-margin-500);\n  }\n\n  &.ml-550 {\n    margin-inline-start: var(--gcds-icon-margin-550);\n  }\n\n  &.ml-600 {\n    margin-inline-start: var(--gcds-icon-margin-600);\n  }\n\n  &.ml-700 {\n    margin-inline-start: var(--gcds-icon-margin-700);\n  }\n\n  &.ml-800 {\n    margin-inline-start: var(--gcds-icon-margin-800);\n  }\n\n  &.ml-900 {\n    margin-inline-start: var(--gcds-icon-margin-900);\n  }\n\n  &.ml-1000 {\n    margin-inline-start: var(--gcds-icon-margin-1000);\n  }\n\n  /* Margin right */\n  &.mr-0 {\n    margin-inline-end: var(--gcds-icon-margin-0);\n  }\n\n  &.mr-50 {\n    margin-inline-end: var(--gcds-icon-margin-50);\n  }\n\n  &.mr-100 {\n    margin-inline-end: var(--gcds-icon-margin-100);\n  }\n\n  &.mr-150 {\n    margin-inline-end: var(--gcds-icon-margin-150);\n  }\n\n  &.mr-200 {\n    margin-inline-end: var(--gcds-icon-margin-200);\n  }\n\n  &.mr-250 {\n    margin-inline-end: var(--gcds-icon-margin-250);\n  }\n\n  &.mr-300 {\n    margin-inline-end: var(--gcds-icon-margin-300);\n  }\n\n  &.mr-400 {\n    margin-inline-end: var(--gcds-icon-margin-400);\n  }\n\n  &.mr-450 {\n    margin-inline-end: var(--gcds-icon-margin-450);\n  }\n\n  &.mr-500 {\n    margin-inline-end: var(--gcds-icon-margin-500);\n  }\n\n  &.mr-550 {\n    margin-inline-end: var(--gcds-icon-margin-550);\n  }\n\n  &.mr-600 {\n    margin-inline-end: var(--gcds-icon-margin-600);\n  }\n\n  &.mr-700 {\n    margin-inline-end: var(--gcds-icon-margin-700);\n  }\n\n  &.mr-800 {\n    margin-inline-end: var(--gcds-icon-margin-800);\n  }\n\n  &.mr-900 {\n    margin-inline-end: var(--gcds-icon-margin-900);\n  }\n\n  &.mr-1000 {\n    margin-inline-end: var(--gcds-icon-margin-1000);\n  }\n\n  /* Fixed width */\n  &.fixed-width {\n    text-align: center;\n  }\n\n  &.size-caption.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-caption) * 1em);\n  }\n\n  &.size-text.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-text) * 1em);\n  }\n\n  &.size-h6.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-h6) * 1em);\n  }\n\n  &.size-h5.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-h5) * 1em);\n  }\n\n  &.size-h4.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-h4) * 1em);\n  }\n\n  &.size-h3.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-h3) * 1em);\n  }\n\n  &.size-h2.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-h2) * 1em);\n  }\n\n  &.size-h1.fixed-width {\n    width: calc(var(--gcds-icon-fixed-width-h1) * 1em);\n  }\n\n  /* Size */\n  &.size-caption {\n    font-size: var(--gcds-icon-font-size-caption);\n    line-height: var(--gcds-icon-line-height-caption);\n  }\n\n  &.size-text {\n    font-size: var(--gcds-icon-font-size-text);\n    line-height: var(--gcds-icon-line-height-text);\n  }\n\n  &.size-h6 {\n    font-size: var(--gcds-icon-font-size-h6);\n    line-height: var(--gcds-icon-line-height-h6);\n  }\n\n  &.size-h5 {\n    font-size: var(--gcds-icon-font-size-h5);\n    line-height: var(--gcds-icon-line-height-h5);\n  }\n\n  &.size-h4 {\n    font-size: var(--gcds-icon-font-size-h4);\n    line-height: var(--gcds-icon-line-height-h4);\n  }\n\n  &.size-h3 {\n    font-size: var(--gcds-icon-font-size-h3);\n    line-height: var(--gcds-icon-line-height-h3);\n  }\n\n  &.size-h2 {\n    font-size: var(--gcds-icon-font-size-h2);\n    line-height: var(--gcds-icon-line-height-h2);\n  }\n\n  &.size-h1 {\n    font-size: var(--gcds-icon-font-size-h1);\n    line-height: var(--gcds-icon-line-height-h1);\n  }\n}\n","import { Component, Element, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'gcds-icon',\n  styleUrl: 'gcds-icon.scss',\n  shadow: true,\n})\nexport class GcdsIcon {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Style of the icon. 'regular' icons are outlined. Some icons have 'solid' variation.\n   */\n  @Prop() iconStyle?: 'regular' | 'solid' = 'solid';\n\n  /**\n   * Add icon description.\n   */\n  @Prop() label?: string;\n\n  /**\n   * Add margin to the left of the icon\n   */\n  @Prop() marginLeft?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000';\n\n  /**\n   * Add margin to the right of the icon\n   */\n  @Prop() marginRight?:\n    | '0'\n    | '50'\n    | '100'\n    | '150'\n    | '200'\n    | '250'\n    | '300'\n    | '400'\n    | '450'\n    | '500'\n    | '550'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | '1000';\n\n  /**\n   * Name of the icon.\n   */\n  @Prop() name!: string;\n\n  /**\n   * If the icon should render as a fixed-width square, or their natural width.\n   */\n  @Prop() fixedWidth: boolean = false;\n\n  /**\n   * Defines the size of the icon.\n   */\n  @Prop() size?:\n    | 'inherit'\n    | 'caption'\n    | 'text'\n    | 'h6'\n    | 'h5'\n    | 'h4'\n    | 'h3'\n    | 'h2'\n    | 'h1' = 'text';\n\n  render() {\n    const {\n      iconStyle,\n      label,\n      marginLeft,\n      marginRight,\n      name,\n      fixedWidth,\n      size,\n    } = this;\n\n    return (\n      <Host>\n        <span\n          class={`\n            gcds-icon fa fa-${iconStyle} fa-${name}\n            ${marginLeft ? `ml-${marginLeft}` : ''}\n            ${marginRight ? `mr-${marginRight}` : ''}\n            ${size ? `size-${size}` : ''}\n            ${fixedWidth ? `fixed-width` : ''}\n          `}\n          role=\"img\"\n          aria-label={label ? label : false}\n          aria-hidden={label ? 'false' : 'true'}\n        ></span>\n      </Host>\n    );\n  }\n}\n"],"version":3}