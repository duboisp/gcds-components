{"file":"gcds-radio-group.entry.esm.js","mappings":"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","names":[],"sources":["src/components/gcds-radio-group/gcds-radio-group.css?tag=gcds-radio-group&encapsulation=shadow","src/components/gcds-radio-group/gcds-radio-group.tsx"],"sourcesContent":["@layer reset, default, disabled, error, focus;@layer reset{:host{display:block}:host .gcds-radio{border:0;padding:0}:host .gcds-radio gcds-label:after,:host .gcds-radio gcds-label:before{box-sizing:border-box;content:\"\";cursor:pointer}}@layer default{:host .gcds-radio{color:var(--gcds-radio-default-text);font:var(--gcds-radio-font);margin:var(--gcds-radio-margin)!important;max-width:var(--gcds-radio-max-width);min-height:calc(var(--gcds-radio-input-height-and-width) - var(--gcds-radio-padding));padding:var(--gcds-radio-padding) 0 0;position:relative;transition:color .15s ease-in-out}:host .gcds-radio :is(gcds-label,gcds-hint){padding:var(--gcds-radio-label-padding)!important}:host .gcds-radio gcds-hint::part(hint){margin:0}:host .gcds-radio gcds-label:after,:host .gcds-radio gcds-label:before,:host .gcds-radio input{position:absolute}:host .gcds-radio gcds-label:before,:host .gcds-radio input{height:var(--gcds-radio-input-height-and-width);left:0;top:0;width:var(--gcds-radio-input-height-and-width)}:host .gcds-radio input{opacity:0}:host .gcds-radio gcds-label{width:fit-content}:host .gcds-radio gcds-label:after,:host .gcds-radio gcds-label:before{border-radius:var(--gcds-radio-border-radius)}:host .gcds-radio gcds-label:before{border:var(--gcds-radio-input-border-width) solid;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out,outline .15s ease-in-out}:host .gcds-radio gcds-label:after{background-color:currentcolor;height:var(--gcds-radio-check-height-and-width);left:var(--gcds-radio-check-left);opacity:0;top:var(--gcds-radio-check-top);transition:opacity .2s ease-in-out;width:var(--gcds-radio-check-height-and-width)}:host .gcds-radio input:checked+gcds-label:after{opacity:1}}@layer disabled{:host .gcds-radio.gcds-radio--disabled{color:var(--gcds-radio-disabled-text)}:host .gcds-radio.gcds-radio--disabled gcds-label:after,:host .gcds-radio.gcds-radio--disabled gcds-label:before{cursor:not-allowed}:host .gcds-radio.gcds-radio--disabled gcds-label:before{background-color:var(--gcds-radio-disabled-background);border-color:var(--gcds-radio-disabled-border)}}@layer error{:host .gcds-radio.gcds-radio--error:not(:focus-within) gcds-label:before{border-color:var(--gcds-radio-danger-border)}:host .gcds-radio.gcds-radio--error:not(:focus-within) gcds-label:after{background-color:var(--gcds-radio-danger-border)}}@layer focus{:host .gcds-radio:focus-within{color:var(--gcds-radio-focus-text)}:host .gcds-radio:focus-within input:focus+gcds-label:before{background:var(--gcds-radio-focus-background);box-shadow:var(--gcds-radio-focus-box-shadow);outline:var(--gcds-radio-focus-outline-width) solid currentcolor;outline-offset:var(--gcds-radio-input-border-width)}:host .gcds-radio:focus-within input:focus+gcds-label:after{background-color:currentcolor}}","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  State,\n  Prop,\n  Listen,\n  Watch,\n  Host,\n  h,\n  AttachInternals,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\n\nexport type RadioObject = {\n  id: string;\n  label: string;\n  value: string;\n  hint?: string;\n  checked?: boolean;\n  required?: boolean;\n  disabled?: boolean;\n};\n\n@Component({\n  tag: 'gcds-radio-group',\n  styleUrl: 'gcds-radio-group.css',\n  shadow: { delegatesFocus: true },\n  formAssociated: true,\n})\nexport class GcdsRadioGroup {\n  @Element() el: HTMLElement;\n\n  @AttachInternals()\n  internals: ElementInternals;\n\n  private shadowElement?: HTMLInputElement;\n\n  private optionObject;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Options to render radio buttons\n   */\n  @Prop() options!: string | Array<RadioObject>;\n  @Watch('options')\n  validateOptions() {\n    if (typeof this.options == 'object') {\n      this.optionObject = this.options;\n    } else if (typeof this.options == 'string') {\n      this.optionObject = JSON.parse(this.options);\n    }\n  }\n\n  /**\n   * Name attribute for an input element.\n   */\n  @Prop({ reflect: true, mutable: false }) name!: string;\n\n  /**\n   * Value for the selected radio element.\n   */\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * Specifies if the radio is invalid.\n   */\n  @State() hasError: boolean;\n\n  /**\n   * State to handle when errors are passed down to component\n   */\n  @State() parentError: string;\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the radio button is checked\n   */\n  @Event() gcdsChange!: EventEmitter<void>;\n\n  /**\n   * Emitted when the radio has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the radio loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = () => {\n    this.gcdsBlur.emit();\n  };\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n    this.validateOptions();\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n\n    this.optionObject &&\n      this.optionObject.map(radio => {\n        if (radio.checked) {\n          this.internals.setFormValue(radio.value, 'checked');\n        }\n      });\n  }\n\n  private onChange = e => {\n\tthis.value = e.target.value;\n    this.gcdsChange.emit(e.target.value);\n    this.internals.setFormValue(e.target.value, 'checked');\n\n    const changeEvt = new e.constructor(e.type, e);\n    this.el.dispatchEvent(changeEvt);\n  };\n\n  /**\n   * Event listener for gcds-fieldset errors\n   */\n  @Listen('gcdsGroupError', { target: 'body' })\n  gcdsGroupError(e) {\n    if (e.srcElement.contains(this.el)) {\n      this.hasError = true;\n      this.parentError = e.detail;\n    }\n  }\n  @Listen('gcdsGroupErrorClear', { target: 'body' })\n  gcdsGroupErrorClear(e) {\n    if (e.srcElement.contains(this.el) && this.hasError) {\n      this.hasError = false;\n      this.parentError = '';\n    }\n  }\n\n  render() {\n    const { lang, name, hasError, parentError, inheritedAttributes } = this;\n\n    return (\n      <Host>\n        {this.optionObject &&\n          this.optionObject.map(radio => {\n            const attrsInput = {\n              name,\n              disabled: radio.disabled,\n              required: radio.required,\n              value: radio.value,\n              checked: radio.checked,\n              ...inheritedAttributes,\n            };\n\n            if (radio.hint || parentError) {\n              const hintID = radio.hint ? `hint-${radio.id} ` : '';\n              const errorID = parentError ? `parent-error ` : '';\n              attrsInput['aria-describedby'] = `${hintID}${errorID}${\n                attrsInput['aria-describedby']\n                  ? `${attrsInput['aria-describedby']}`\n                  : ''\n              }`;\n            }\n\n            if (hasError) {\n              attrsInput['aria-invalid'] = 'true';\n            }\n\n            return (\n              <div\n                class={`gcds-radio ${\n                  radio.disabled ? 'gcds-radio--disabled' : ''\n                } ${hasError ? 'gcds-radio--error' : ''}`}\n              >\n                <input\n                  id={radio.id}\n                  type=\"radio\"\n                  {...attrsInput}\n                  onChange={e => this.onChange(e)}\n                  onBlur={() => this.onBlur()}\n                  onFocus={() => this.gcdsFocus.emit()}\n                  ref={element =>\n                    (this.shadowElement = element as HTMLInputElement)\n                  }\n                />\n\n                <gcds-label\n                  label={radio.label}\n                  label-for={radio.id}\n                  lang={lang}\n                ></gcds-label>\n\n                {radio.hint ? (\n                  <gcds-hint hint-id={radio.id}>{radio.hint}</gcds-hint>\n                ) : null}\n              </div>\n            );\n          })}\n        {parentError && (\n          <span id={`parent-error`} hidden>\n            {parentError}\n          </span>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}