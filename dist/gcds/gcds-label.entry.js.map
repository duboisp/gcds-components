{"file":"gcds-label.entry.esm.js","mappings":";;;AAAA,MAAM,IAAI,GAAG;AACb,EAAE,EAAE,EAAE;AACN,IAAI,QAAQ,EAAE,UAAU;AACxB,GAAG;AACH,EAAE,EAAE,EAAE;AACN,IAAI,QAAQ,EAAE,aAAa;AAC3B,GAAG;AACH,CAAC;;ACPD,MAAM,YAAY,GAAG,inBAAinB;;MCUznB,SAAS;;;QA8DZ,YAAO,GAAG,CAAC,EAAO;YACxB,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,IAAI,YAAY,EAAE;gBACzC,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;SACF,CAAC;;;;;;;;;;IA7BF,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS;YAC7C,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;KAC3C;IAED,MAAM,iBAAiB;;QAErB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;IAKO,OAAO;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACtB;KACF;IAQD,MAAM;QACJ,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE5D,QACE,EAAC,IAAI,IAAC,EAAE,EAAE,aAAa,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,IACtD,aACE,OAAO,EAAE,QAAQ,EACjB,KAAK,EAAE,cAAc,SAAS,GAAG,eAAe,GAAG,EAAE,EAAE,EACvD,GAAG,EAAE,OAAO,KAAK,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAExC,gBAAO,KAAK,CAAQ,EACnB,QAAQ,IACP,2BAAkB,MAAM,EAAC,KAAK,EAAC,iBAAiB,SAC5CA,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,MAChB,IACL,IAAI,CACF,CACH,EACP;KACH;;;;;;;","names":["i18n"],"sources":["src/components/gcds-label/i18n/i18n.js","src/components/gcds-label/gcds-label.css?tag=gcds-label&encapsulation=scoped","src/components/gcds-label/gcds-label.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    required: 'required',\n  },\n  fr: {\n    required: 'obligatoire',\n  },\n};\n\nexport default I18N;\n","@layer reset, default;@layer reset{:host{display:block}:host .gcds-label{color:inherit}}@layer default{:host .gcds-label{cursor:pointer;display:block;font:var(--gcds-label-font-desktop);margin:var(--gcds-label-margin)!important;max-width:100%}@media only screen and (width < 48em){:host .gcds-label{font:var(--gcds-label-font-mobile)}}:host .gcds-label.label--hidden{height:0;margin:0;opacity:0;overflow:hidden;width:0}:host .gcds-label .label--required{font-weight:var(--gcds-label-required-font-weight);margin:var(--gcds-label-required-margin)!important}}","import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-label',\n  styleUrl: 'gcds-label.css',\n  shadow: false,\n  scoped: true,\n})\nexport class GcdsLabel {\n  @Element() el: HTMLElement;\n\n  private focusEl?: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Specifies if the label is hidden or not.\n   */\n  @Prop() hideLabel?: boolean;\n\n  /**\n   * Form field label\n   */\n  @Prop() label: string;\n\n  /**\n   * Defines the label's for attribute.\n   */\n  @Prop() labelFor: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop() required?: boolean;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  /**\n   * Click label if host element is clicked\n   */\n  private clickEl() {\n    if (this.focusEl) {\n      this.focusEl.click();\n    }\n  }\n\n  private onClick = (ev: any) => {\n    if (ev.srcElement.tagName == 'GCDS-LABEL') {\n      this.clickEl();\n    }\n  };\n\n  render() {\n    const { hideLabel, labelFor, label, required, lang } = this;\n\n    return (\n      <Host id={`label-for-${labelFor}`} onClick={this.onClick}>\n        <label\n          htmlFor={labelFor}\n          class={`gcds-label ${hideLabel ? 'label--hidden' : ''}`}\n          ref={focusEl => (this.focusEl = focusEl)}\n        >\n          <span>{label}</span>\n          {required ? (\n            <span aria-hidden=\"true\" class=\"label--required\">\n              ({i18n[lang].required})\n            </span>\n          ) : null}\n        </label>\n      </Host>\n    );\n  }\n}\n"],"version":3}