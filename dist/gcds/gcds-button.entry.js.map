{"file":"gcds-button.entry.esm.js","mappings":"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","names":["i18n"],"sources":["src/components/gcds-button/i18n/i18n.js","src/components/gcds-button/gcds-button.css?tag=gcds-button&encapsulation=shadow","src/components/gcds-button/gcds-button.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    label: 'Opens in a new tab.',\n  },\n  fr: {\n    label: \"S'ouvre dans un nouvel onglet.\",\n  },\n};\n\nexport default I18N;\n","@layer reset, default, roles, size, disabled, hover, focus, active, mobile;@layer reset{:host{display:inline-block}:host .gcds-button{box-sizing:border-box;cursor:pointer;text-decoration:none}:host slot{display:initial}}@layer default{:host .gcds-button{display:inline-block;font:var(--gcds-button-font);text-align:center;width:var(--gcds-button-width);text-wrap:balance;border:var(--gcds-button-border-width) solid transparent;border-radius:var(--gcds-button-border-radius);padding:var(--gcds-button-padding);transition:all .15s ease-in-out}}@layer roles{:host .gcds-button.button--role-danger{background-color:var(--gcds-button-danger-default-background);color:var(--gcds-button-danger-default-text)}:host .gcds-button.button--role-primary{background-color:var(--gcds-button-primary-default-background);color:var(--gcds-button-primary-default-text)}:host .gcds-button.button--role-secondary{background-color:var(--gcds-button-secondary-default-background);border:var(--gcds-button-border-width) solid;color:var(--gcds-button-secondary-default-text)}}@layer size{:host .gcds-button.button--small{font:var(--gcds-button-small-font);padding:var(--gcds-button-small-padding)}}@layer disabled{:host .gcds-button[aria-disabled=true]{background-color:var(--gcds-button-shared-disabled-background);border:var(--gcds-button-border-width) solid;color:var(--gcds-button-shared-disabled-text);cursor:not-allowed;pointer-events:none}}@layer hover{@media (hover:hover){:host .gcds-button:hover.button--role-danger{background-color:var(--gcds-button-danger-hover-background)}:host .gcds-button:hover.button--role-primary{background-color:var(--gcds-button-primary-hover-background)}:host .gcds-button:hover.button--role-secondary{background-color:var(--gcds-button-secondary-hover-background)}}}@layer focus{:host .gcds-button:focus{background-color:var(--gcds-button-shared-focus-background);border-color:var(--gcds-button-shared-focus-background);box-shadow:var(--gcds-button-shared-focus-box-shadow);color:var(--gcds-button-shared-focus-text);outline:var(--gcds-button-shared-focus-outline-width) solid var(--gcds-button-shared-focus-background);outline-offset:var(--gcds-button-border-width)}}@layer active{:host .gcds-button:active{background-color:var(--gcds-button-shared-active-background);border-color:var(--gcds-button-shared-active-background)}}@layer mobile{@media screen and (max-width:30rem){:host{display:block}:host .gcds-button{margin:var(--gcds-button-mobile-margin);width:var(--gcds-button-mobile-width)}}}","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Watch,\n  Prop,\n  State,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport { inheritAttributes, emitEvent } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-button',\n  styleUrl: 'gcds-button.css',\n  shadow: { delegatesFocus: true },\n})\nexport class GcdsButton {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Set button types\n   */\n  // prettier-ignore\n  @Prop({ mutable: true }) type: 'submit' | 'reset' | 'button' | 'link' = 'button';\n  @Watch('type')\n  validateType(newValue: string) {\n    const values = ['submit', 'reset', 'button', 'link'];\n\n    if (!values.includes(newValue)) {\n      this.type = 'button';\n    }\n  }\n\n  /**\n   * Set the main style\n   */\n  @Prop({ mutable: true }) buttonRole: 'primary' | 'secondary' | 'danger' =\n    'primary';\n\n  @Watch('buttonRole')\n  validateButtonRole(newValue: string) {\n    const values = ['primary', 'secondary', 'danger'];\n\n    if (!values.includes(newValue)) {\n      this.buttonRole = 'primary';\n    }\n  }\n\n  /**\n   * Set the button size\n   */\n  @Prop({ mutable: true }) size: 'regular' | 'small' = 'regular';\n\n  @Watch('size')\n  validateSize(newValue: string) {\n    const values = ['regular', 'small'];\n\n    if (!values.includes(newValue)) {\n      this.size = 'regular';\n    }\n  }\n\n  /**\n   * The buttonId attribute specifies the id for a <button> element.\n   */\n  @Prop() buttonId: string;\n\n  /**\n   * The name attribute specifies the name for a <button> element.\n   */\n  @Prop() name: string | undefined;\n\n  /**\n   * The disabled attribute for a <button> element.\n   */\n  @Prop() disabled: boolean;\n\n  /**\n   * Link props\n   */\n\n  /**\n   * The href attribute specifies the URL of the page the link goes to\n   */\n  @Prop() href: string | undefined;\n\n  /**\n   * The rel attribute specifies the relationship between the current document and the linked document\n   */\n  @Prop() rel: string | undefined;\n\n  /**\n   * The target attribute specifies where to open the linked document\n   */\n  @Prop() target: string | undefined;\n\n  /**\n   * The download attribute specifies that the target (the file specified in the href attribute) will be downloaded when a user clicks on the hyperlink\n   */\n  @Prop() download: string | undefined;\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the button has been clicked.\n   */\n  @Event() gcdsClick!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateType(this.type);\n    this.validateButtonRole(this.buttonRole);\n    this.validateSize(this.size);\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  private handleClick = (e: Event) => {\n    const event = emitEvent(e, this.gcdsClick);\n\n    if (event) {\n      if (!this.disabled && this.type != 'button' && this.type != 'link') {\n        // Attach button to form\n        const form = this.el.closest('form');\n\n        if (form) {\n          e.preventDefault();\n\n          const formButton = document.createElement('button');\n          formButton.type = this.type;\n          if (this.name) {\n            formButton.name = this.name;\n          }\n          formButton.style.display = 'none';\n          form.appendChild(formButton);\n          formButton.click();\n          formButton.remove();\n        }\n      }\n\n      // Has any inherited attributes changed on click\n      this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n    }\n  };\n\n  render() {\n    const {\n      type,\n      buttonRole,\n      size,\n      buttonId,\n      disabled,\n      lang,\n      name,\n      href,\n      rel,\n      target,\n      download,\n      inheritedAttributes,\n    } = this;\n\n    const Tag = type != 'link' ? 'button' : 'a';\n    const attrs =\n      Tag === 'button'\n        ? {\n            type: type,\n            ariaDisabled: disabled,\n            name,\n          }\n        : {\n            href,\n            rel,\n            target,\n            download,\n          };\n\n    return (\n      <Host>\n        <Tag\n          {...attrs}\n          id={buttonId}\n          onBlur={() => this.gcdsBlur.emit()}\n          onFocus={() => this.gcdsFocus.emit()}\n          onClick={e => this.handleClick(e)}\n          class={`gcds-button button--role-${buttonRole} button--${size}`}\n          ref={element => (this.shadowElement = element as HTMLElement)}\n          {...inheritedAttributes}\n          part=\"button\"\n        >\n          <slot></slot>\n\n          {type === 'link' && target === '_blank' ? (\n            <gcds-icon\n              name=\"external-link\"\n              label={i18n[lang].label}\n              margin-left=\"200\"\n            />\n          ) : null}\n        </Tag>\n      </Host>\n    );\n  }\n}\n"],"version":3}