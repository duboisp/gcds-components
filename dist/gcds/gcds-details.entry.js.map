{"file":"gcds-details.entry.esm.js","mappings":";;;AAAA,MAAM,cAAc,GAAG,s6FAAs6F;;MCiBh7F,WAAW;;;;;;;oBAemC,KAAK;;;;;;;;IA6B9D,MAAM,MAAM;QACV,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KACxB;IAED,MAAM;QACJ,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEpC,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,cAAc,IACvB,+BACiB,IAAI,CAAC,QAAQ,EAAE,mBAChB,gBAAgB,EAC9B,MAAM,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAClC,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EACpC,OAAO,EAAE,CAAC;gBACR,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC3C,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,MAAM,EAAE,CAAC;iBACf;aACF,EACD,KAAK,EAAC,kBAAkB,EACxB,EAAE,EAAC,kBAAkB,IAEpB,YAAY,CACN,EACT,WACE,EAAE,EAAC,gBAAgB,EACnB,KAAK,EAAC,gBAAgB,qBACN,kBAAkB,IAElC,eAAa,CACT,CACF,CACD,EACP;KACH;;;;;;;","names":[],"sources":["src/components/gcds-details/gcds-details.css?tag=gcds-details&encapsulation=shadow","src/components/gcds-details/gcds-details.tsx"],"sourcesContent":["@layer reset, default, hover, focus;@layer reset{:host{display:block}:host .details__summary{background-color:transparent;border-color:transparent;cursor:pointer;display:block}:host .details__panel slot{display:initial}:host .details__panel ::slotted(:first-child){margin-block-start:0}:host .details__panel ::slotted(:last-child){margin-block-end:0}:host .details__panel ::slotted(ol),:host .details__panel ::slotted(ul){padding:0}}@layer default{:host .gcds-details .details__summary{color:var(--gcds-details-default-text);font:var(--gcds-details-font);padding:var(--gcds-details-summary-padding);position:relative;text-align:left;text-decoration-color:currentColor;text-decoration-line:underline;text-decoration-style:solid;text-decoration-thickness:var(\n        --gcds-details-default-decoration-thickness\n      );text-underline-offset:.2em;transition:background-color .15s ease-in-out,color .15s ease-in-out}:host .gcds-details .details__summary:before{border-block-end:var(--gcds-details-summary-arrow-border-top-bottom) solid transparent;border-block-start:var(--gcds-details-summary-arrow-border-top-bottom) solid transparent;border-inline-start:var(--gcds-details-summary-arrow-border-left) solid currentColor;content:\"\";height:0;left:var(--gcds-details-summary-arrow-left);position:absolute;top:var(--gcds-details-summary-arrow-top);transition:transform .15s ease-in-out;width:0}:host .gcds-details .details__summary[aria-expanded=false]+.details__panel{display:none}:host .gcds-details .details__summary[aria-expanded=true]:before{transform:rotate(90deg)}:host .gcds-details .details__panel{border-inline-start:var(--gcds-details-panel-border-width) solid var(--gcds-details-panel-border-color);margin:var(--gcds-details-panel-margin);padding:var(--gcds-details-panel-padding)}:host .gcds-details .details__panel ::slotted(*){font:var(--gcds-details-font)}:host .gcds-details .details__panel ::slotted(:not(:last-child)){margin:0 0 var(--gcds-details-panel-slotted-margin)!important}:host .gcds-details .details__panel ::slotted(ol),:host .gcds-details .details__panel ::slotted(ul){margin-inline-start:var(\n          --gcds-details-panel-slotted-margin\n        )!important}:host .gcds-details .details__panel ::slotted(small){font:var(--gcds-details-font-small)}}@layer hover{@media (hover:hover){:host .gcds-details .details__summary:hover:not(:focus){color:var(--gcds-details-hover-text);text-decoration-thickness:var(--gcds-details-hover-decoration-thickness);text-underline-offset:.2em}:host .gcds-details .details__summary:hover:not(:focus):before{color:var(--gcds-details-hover-text)}}}@layer focus{:host .gcds-details .details__summary:focus{background-color:var(--gcds-details-focus-background);border-radius:var(--gcds-details-focus-border-radius);box-shadow:var(--gcds-details-focus-box-shadow);color:var(--gcds-details-focus-text);outline:var(--gcds-details-focus-outline);outline-offset:var(--gcds-details-focus-outline-offset);text-decoration:none}}","import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  Method,\n  Event,\n  EventEmitter,\n  h,\n} from '@stencil/core';\nimport { emitEvent } from '../../utils/utils';\n\n@Component({\n  tag: 'gcds-details',\n  styleUrl: 'gcds-details.css',\n  shadow: true,\n})\nexport class GcdsDetails {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * The details title summarizes the panel content.\n   */\n  @Prop() detailsTitle!: string;\n\n  /**\n   * Defines if the details panel is open by default or not.\n   */\n  @Prop({ mutable: true, reflect: true }) open?: boolean = false;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the details has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the details loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /**\n   * Emitted when the details has been clicked.\n   */\n  @Event() gcdsClick!: EventEmitter<void>;\n\n  /**\n   * Methods\n   */\n\n  /*\n   * Toggle details open or closed\n   */\n  @Method()\n  async toggle() {\n    this.open = !this.open;\n  }\n\n  render() {\n    const { detailsTitle, open } = this;\n\n    return (\n      <Host>\n        <div class=\"gcds-details\">\n          <button\n            aria-expanded={open.toString()}\n            aria-controls=\"details__panel\"\n            onBlur={() => this.gcdsBlur.emit()}\n            onFocus={() => this.gcdsFocus.emit()}\n            onClick={e => {\n              const event = emitEvent(e, this.gcdsClick);\n              if (event) {\n                this.toggle();\n              }\n            }}\n            class=\"details__summary\"\n            id=\"details__summary\"\n          >\n            {detailsTitle}\n          </button>\n          <div\n            id=\"details__panel\"\n            class=\"details__panel\"\n            aria-labelledby=\"details__summary\"\n          >\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}